# TurnKey TKLBAM GitLab hook backup/restore config file

# As of v15.2 TurnKey uses the GitLab Omnibus installer and leverages GitLab's
# built-in backup system to collect the required files.
#
# This config file is provided to allow greater user config of the tklbam
# backup.
#
# Note that this file (and the companion hook script) are included as part of
# the backup. If you wish to override the current hook settings when restoring
# your backup, please create a new conf file (in the same location) named
# gitlab-override.conf. E.g.:
#
#  cp /etc/tklbam/hooks.d/gitlab.conf /etc/tklbam/hooks.d/gitlab-override.conf
#
# Any settings in this override file will override settings within the default
# file, but will not be included in any future backups. If you want your new
# settings included in future backups, you will need to adjust the default
# file.
#
# Alternatively, many of the options can be overridden via env vars. E.g. to
# skip creation of the rollback backup when restoring:
#
#   export ROLLBACK_BACKUP=n
#   tklbam-restore BACKUP_ID


## TKLBAM GitLab hook script options
####################################

# Where gitlab stores backups.
# Latest GitLab generated backup file will be moved from/to here by the
# backup/restore hook.
# Assumes the default - set in '/etc/gitlab/gitlab.rb'.
# If you change the default, then you will also want to change this.
backup_dir_gitlab=/var/opt/gitlab/backups

# Where tklbam will store the GitLab generated backup file.
# Latest file will be moved to/from here by backup/restore hook.
# Note: backup file will be renamed 'gitlab_backup.tar'.
# Original filename will be stored in 'gitlab_backup.tar.filename'.
backup_dir_tklbam=/var/cache/tklbam-gitlab

# Clear backup dir prior to current operation?
# Default 'y'.
# Can be overridden by setting env var CLR_BACKUP_DIR_TKLBAM
clr_backup_dir_tklbam=y

# Command to move or copy file during backup
#   $backup_dir_gitlab/xxxxxxxxxx_YYYY_MM_DD_vv.v.v_gitlab_backup.tar
#       from/to
#   $backup_dir_tklbam/gitlab_backup.tar
# (tested: 'mv' & 'cp' - other options may be supported)
# Can be overridden by setting env var TKLBAM_BACKUP_PROCESS_COMMAND
tklbam_backup_process_command=mv

# Create GitLab backup of current system prior to restore?
#
# Can be overridden by setting env var ROLLBACK_BACKUP
rollback_backup=y

# Directory to store rollback backup
rollback_backup_dir=/var/cache/tklbam-gitlab-rollback

# Attempt to downgrade or upgrade the installed version of GitLab?
# WARNING - this is completely experimental and is not guaranteed to work.
# Disabled by default
# Can be overridden by setting env var ATTEMPT_GITLAB_VERSION_MATCH
attempt_gitlab_version_match=n

# GitLab backup/restore options
###############################

# For full details of GitLab backup/restore see:
# https://docs.gitlab.com/ce/raketasks/backup_restore.html
#
# GitLab currently provides 2 different backup strategy options. They are:
#
#    stream - streams the data directly from GitLab to the local backup dir
#           - faster and uses less disk space
#           - less reliable; e.g. will fail if files change during backup
#
#    copy   - copies the data first, before creating the backup
#           - slower and uses more disk space
#           - much more reliable as it is backing up a copy of the files
#
# https://docs.gitlab.com/ce/raketasks/backup_restore.html#backup-strategy-option
backup_strategy=copy

# https://docs.gitlab.com/ce/raketasks/backup_restore.html#excluding-specific-directories-from-the-backup
backup_components_skip=""

# Forces the restore process to accept defaults and work non-interatively.
# https://docs.gitlab.com/ce/raketasks/backup_restore.html#restore-prerequisites
restore_force="yes"
